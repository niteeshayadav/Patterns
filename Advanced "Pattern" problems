public class mainjava {
   public static void Hollowrectangle(int rows,int col){
   for (int i=1;i<=rows;i++){
    for (int j=1;j<=col;j++){
        if (i==1||i==rows||j==1||j==col){
            System.out.print("*");
        }
        else{
            System.out.print(" ");
        } 
    }
    System.out.println();
   }
   }
   public static void Inverted_Rotated_Pyramid(int n){
    for (int i=1;i<=n;i++){
        //spaces printing 
        for (int j=1;j<=n-i;j++){
            System.out.print(" ");
        }
        for (int j=1;j<=i;j++){
            System.out.print("*");
        }
        System.out.println();
    }
   }
   public static void Inverted_half_pyramid(int n){
    for (int i=n;i>=1;i--){
        for (int j=1;j<=i;j++){
            System.out.print(j);
        }
        System.out.println();
        
    }
   }
   public static void floydstriangle(int n){
    int num=1;
    for (int i=1;i<=n;i++){
        for (int j=1;j<=i;j++){
            System.out.print(num+" ");
            num++;
        }
        System.out.println();
    }
   }
   public static void butterfly(int n){
    for (int i=1;i<=n;i++){
        //stars
        for(int j=1;j<=i;j++){
            System.out.print("*");
        }
        //spaces
        for (int j=1;j<=2*(n-i);j++){
            System.out.print(" ");
        }
        //stars
        for (int j=1;j<=i;j++){
         System.out.print("*");
        }
        System.out.println();
    }

    for (int i=n;i>=1;i--){
        //stars
        for(int j=1;j<=i;j++){
            System.out.print("*");
        }
        //spaces
        for (int j=1;j<=2*(n-i);j++){
            System.out.print(" ");
        }
        //stars
        for (int j=1;j<=i;j++){
         System.out.print("*");
        }
        System.out.println();
    }
   } 
    public static void Diamond(int n){
    //Top part:-
   for (int i=1;i<=n;i++){
    //spaces
    for (int j=1;j<=n-i;j++){
        System.out.print(" ");
    }

    //stars
    for(int j=1;j<=2*i-1;j++){
        System.out.print("*");
    }
    System.out.println();
   }
    //bottom part:-
   for (int i=n;i>=1;i--){
    //spaces
    for (int j=1;j<=n-i;j++){
        System.out.print(" ");
    }

    //stars
    for(int j=1;j<=2*i-1;j++){
        System.out.print("*");
    }
    System.out.println();
   }
   }

   public static void Solid_Rhombus(int n){
    for(int i=1;i<=n;i++){
        //spaces
        for (int j=1;j<=n-i;j++){
            System.out.print(" ");
        }
        //stars
        for (int j=1;j<=5;j++){
            System.out.print("*");
        }
        System.out.println();
    }
   }

   public static void Hollow_Rhombus(int n){
   for (int i=1;i<=n;i++){
        //spaces
        for(int j=1;j<=n-i;j++){
            System.out.print(" ");
        }

   //to print stars -we use hollow rectangle as logic is same

        for (int j=1;j<=n;j++){
            if(i==1||i==n||j==1||j==n){
                System.out.print("*");
            }else{
                System.out.print(" ");
            }
        }
        System.out.println();
    }
    } 
    public static void NumberPyramid(int n){
        for (int i=1;i<=n;i++){
            //spaces
            for(int j=1;j<=n-i;j++){
                System.out.print(" ");
            }
            //numbers
            for(int j=1;j<=i;j++){
                System.out.print(i+" ");
            }
            System.out.println();
        }
    }

    public static void Palindrome_Pyramid(int n){
    for (int i=1;i<=n;i++){
        //spaces
        for(int j=1;j<=n-i;j++){
            System.out.print(" ");
        }
        //left part:-numbers
        for (int j=i;j>=1;j--){
            System.out.print(j);
        }
        //right part:-numbers
        for(int j=2;j<=i;j++){
            System.out.print(j);
        }
        
        System.out.println();
    }
    }
   





   public static void main (String args[]){
    Hollowrectangle(5,7);
    Inverted_Rotated_Pyramid(5);
    Inverted_half_pyramid(5);
    floydstriangle(5);
    butterfly(5);
    Diamond(4);
    Solid_Rhombus(5);
    Hollow_Rhombus(5);
    NumberPyramid(5);
    Palindrome_Pyramid(5);
   }
}
